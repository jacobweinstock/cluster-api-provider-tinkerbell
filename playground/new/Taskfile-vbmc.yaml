version: '3'

tasks:

  validate-deps:
    summary: |
      Validate required dependencies for virtual bmc tasks.
    silent: true
    cmds:
      - for: ['docker', "yq"]
        cmd: command -v {{.ITEM}} >/dev/null || echo "'{{.ITEM}}' was not found in the \$PATH, please ensure it is installed."

  start-server:
    deps: [validate-deps]
    silent: true
    summary: |
      Start the virtualbmc server. Requires the "kind" docker network to exist.
    cmds:
      - docker run -d --rm --network kind -v /var/run/libvirt/libvirt-sock-ro:/var/run/libvirt/libvirt-sock-ro -v /var/run/libvirt/libvirt-sock:/var/run/libvirt/libvirt-sock --name virtualbmc ghcr.io/jacobweinstock/virtualbmc
    status:
      - docker ps | grep -q virtualbmc

  start-vbmcs:
    deps: [validate-deps, start-server]
    silent: true
    summary: |
      Register and start the virtualbmc servers. Requires that the virtual machines exist.
    vars:
      VBMC_USER:
        sh: cat output/bmc-secret.yaml | yq eval '.data.username' - | base64 -d
      VBMC_PASS:
        sh: cat output/bmc-secret.yaml | yq eval '.data.password' - | base64 -d
      BMCS:
        sh: find ./output -type f -name 'bmc-machine-node*.yaml'
    cmds:
      - for: { var: BMCS }
        cmd: port=$(cat {{.ITEM}} | yq eval .spec.connection.providerOptions.ipmitool.port); name=$(cat {{.ITEM}} | yq eval .metadata.name | cut -d"-" -f2); docker exec virtualbmc vbmc add --username {{.VBMC_USER}} --password {{.VBMC_PASS}} --port "$port" "$name"
      - for: { var: BMCS }
        cmd: name=$(cat {{.ITEM}} | yq eval .metadata.name | cut -d"-" -f2); docker exec virtualbmc vbmc start "$name"
    status:
      - expected=$((NUM_CONTROL_PLANE_NODES + NUM_WORKER_NODES + NUM_SPARE_NODES)); got=$(docker exec virtualbmc vbmc list | grep -c "running"); [[ "$got" == "$expected" ]]
    